<?php
# ****************************************************************************************************************************
# * Last Edit: October 29, 2020
# * - basic searching funcitonality, but formats the data appropriately to be sent back
# * - based on which search type it is (keyword or title, quick), gather the information and go
# * - optimized based on testing aimed to improve time in returning results
# *
# * 10-29-20: essentially a rewrite of the search functionality to return results 50% faster (Part 3 only)- CZ
# * 08-05-20: changed the searching to be via a plugin - CZ
# * 05-05-20: changed focus a little, added quick search - CZ
# * 04-14-20: altered how searching was performed - needed to tinker with settings - CZ
# * 04-01-20: base version - CZ
# ****************************************************************************************************************************

# ****************************************************************************************************************************
# * This file is handled in three parts
# * - the search term is empty: return an empty results set
# * - the search term is a number and search type is quick: run the predefined koha report
# * - the search term is a term: run the koha plugin
# ****************************************************************************************************************************

# ****************************************************************************************************************************
# * grab the parameters needed
# ****************************************************************************************************************************
$searchTerm = $_GET['searchTerm'];
$searchType = $_GET['searchType'];

# ****************************************************************************************************************************
# * Part 1: empty search term - return an empty result set
# ****************************************************************************************************************************
if (empty($_GET['searchTerm'])) {
  $searchResults['Items'] = '';

# ****************************************************************************************************************************
# * Output to JSON
# ****************************************************************************************************************************
  header('Content-Type: application/json');
  echo json_encode($searchResults);
  die();
}

# ****************************************************************************************************************************
# * Part 2: Quick Search with a report number (passed as searchTerm)
# ****************************************************************************************************************************
if ($searchType == 'quick') {

# ****************************************************************************************************************************
# * assemble the url to the report
# ****************************************************************************************************************************
  $reportURL = 'https://****.bywatersolutions.com/cgi-bin/koha/svc/report?id=' . $searchTerm;
  
# ****************************************************************************************************************************
# * run the report and grab the JSON
# ****************************************************************************************************************************
  $jsonData = json_decode(file_get_contents($reportURL), true);

# ****************************************************************************************************************************
# * loop over the results and build out the array to be passed to the app
# ****************************************************************************************************************************
  foreach($jsonData as $obj){

# ****************************************************************************************************************************
# * clean up the trailing slash at the end of the title
# ****************************************************************************************************************************
    if(substr($obj[0], -1) == '/') {
      $obj[0] = substr($obj[0], 0, -1);
    }
  
# ****************************************************************************************************************************
# * deal with the ISBN number, send it forward, or clean it up where multiples exist
# ****************************************************************************************************************************
    if (strpos($obj[2], '|') > 0) {
      $isbnValue = explode('|', $obj[2]);
	  $obj[2]    = $isbnValue[0];
    }

# ****************************************************************************************************************************
# * provide something if there is no summary
# ****************************************************************************************************************************
    if (empty ($obj[8])) { $obj[8] = "Sorry, there is no summary available for this title."; }

# ****************************************************************************************************************************
# * need to clean up the URL if it's present
# ****************************************************************************************************************************
    $obj[9] = trim($obj[9]);

# ****************************************************************************************************************************
# * Camel case the title
# ****************************************************************************************************************************
    $obj[0] = trim(ucwords($obj[0]));
  
    $iconName = 'https://secure.syndetics.com/index.aspx?isbn=' . trim($obj[2]) . '/LC.GIF';

# ****************************************************************************************************************************
# * need to massage data for movies
# ****************************************************************************************************************************
    if (strpos($obj[3], 'DVD') > -1) {
	  $tempTitle = str_replace(' ', '+', $obj[0]);
      $movieData = json_decode(file_get_contents('http://www.omdbapi.com/?apikey=55f5b2cf&t=' . $tempTitle), true);
	
	  $obj[1]   = $movieData['Director'];
	  $obj[8]   = $movieData['Plot'];
	  $iconName = $movieData['Poster'];
	
	  if (empty($movieData['Poster'])) { continue; }
    }

    $searchResults['Items'][] = array('title' => $obj[0], 'author' => $obj[1], 'image' => $iconName, 'format' => $obj[3], 'barcode' => $obj[4], 'key' => $obj[4], 'summary' => $obj[8], 'url' => $obj[9]); 
  }
  
# ****************************************************************************************************************************
# * Output to JSON
# ****************************************************************************************************************************
  header('Content-Type: application/json');
  echo json_encode($searchResults);
  die();
}


# ****************************************************************************************************************************
# * Part 3: search the plugin
# * - edit the search term and replace any spaces with +
# ****************************************************************************************************************************
$searchTerm = str_replace(' ', '+', $searchTerm);

# ****************************************************************************************************************************
# * search link to the catalogue
# ****************************************************************************************************************************
$reportURL = 'https://catalogue.*****.ca/api/v1/contrib/simplesearch/search/' . $searchTerm;

# ****************************************************************************************************************************
# * run the report and grab the JSON
# ****************************************************************************************************************************
$jsonData = json_decode(file_get_contents($reportURL), true);

$middle = microtime(true);
# ****************************************************************************************************************************
# * parsing the XML throws warning errors, turning off for now
# ****************************************************************************************************************************
  error_reporting(0);

//https://stackoverflow.com/questions/3383649/retrieve-elements-of-xml-page-via-php

foreach($jsonData as $obj){

  $xml = simplexml_load_string($obj);
  $xml->registerXPathNamespace('foo', 'http://www.loc.gov/MARC21/slim');

  foreach( $xml->xpath('//foo:record') as $record ) {
    $record->registerXPathNamespace('foo', 'http://www.loc.gov/MARC21/slim');

# ****************************************************************************************************************************
# * dummy out the variables we need through each iteration of the loop
# ****************************************************************************************************************************
    $title   = '';
    $author  = '';
    $isbn    = '';
    $format  = '';
    $ccode   = '';
    $barcode = '';
    $summary = '';
    $url     = '';

    foreach( $record->xpath('foo:datafield[@tag="020" or @tag="245" or @tag="520" or @tag="856" or @tag="942" or @tag="952"]') as $datafield ) {
	  $datafield->registerXPathNamespace('foo', 'http://www.loc.gov/MARC21/slim');
  
      foreach( $datafield->xpath('foo:subfield') as $sf ) {
		
# ****************************************************************************************************************************
# *     245a/b field holds the title information
# ****************************************************************************************************************************
		if ($datafield['tag'] == '245' && ($sf['code'] == 'a' || $sf['code'] == 'b')) {
          if(substr($sf, -1) == '/') { $sf = substr($sf, 0, -1); }

		  $title .= trim(ucwords($sf)) . ' ';
		}
		
# ****************************************************************************************************************************
# *     245c field holds the author information
# ****************************************************************************************************************************
		if ($datafield['tag'] == '245' && $sf['code'] == 'c') {
		  $author = ucwords($sf);
		  $author = trim(preg_replace("/[^A-Za-z0-9 ]/", '', $author));
		}

# ****************************************************************************************************************************
# *     942c holds the format
# ****************************************************************************************************************************
		if ($datafield['tag'] == '952' && $sf['code'] == 'y') {
		  $format = trim($sf);
		}

# ****************************************************************************************************************************
# *     952p holds the barcode
# ****************************************************************************************************************************
		if ($datafield['tag'] == '952' && $sf['code'] == 'p') {
		  $barcode = trim($sf);
		}

# ****************************************************************************************************************************
# *     952 8 holds the ccode
# ****************************************************************************************************************************
		if ($datafield['tag'] == '952' && $sf['code'] == '8') {
		  $ccode = ucwords(strtolower($sf));
		}

# ****************************************************************************************************************************
# *     520a holds the summary
# ****************************************************************************************************************************
		if ($datafield['tag'] == '520' && $sf['code'] == 'a') {
		  $summary .= $sf;
		}

# ****************************************************************************************************************************
# *     856u holds the summary
# ****************************************************************************************************************************
		if ($datafield['tag'] == '856' && $sf['code'] == 'u') {
		  $url .= $sf;
		}

# ****************************************************************************************************************************
# *     020a holds the summary
# ****************************************************************************************************************************
		if ($datafield['tag'] == '020' && $sf['code'] == 'a') {
		  $isbn     = explode(' ', $sf);
		  $iconName = 'https://secure.syndetics.com/index.aspx?isbn=' . trim($isbn[0]) . '/LC.GIF';
		}
      }

# ****************************************************************************************************************************
# *   need to massage the format
# ****************************************************************************************************************************
      switch (strtoupper($format)) {
        case "AU":
          $format = 'Audiobook';
          break;
        case "BK":
          $format = 'Book';
          break;
        case "HW":
          $format = 'Hardware';
          break;
        case "JAU":
          $format = 'Jr. Audiobook';
          break;
        case "JBK":
          $format = 'Childrens Book';
          break;
        case "VG":
          $format = 'Video Game';
          break;
      }
	
# ****************************************************************************************************************************
# *   need to massage the ccode
# ****************************************************************************************************************************
      switch ($ccode) {
        case "Dvdfic":
          $ccode = 'DVD Fiction';
          break;
        case "Blufic":
          $ccode = 'BluRay Fiction';
          break;
        case "Blunonfic":
          $ccode = 'BluRay Nonfiction';
          break;
        case "Dvdnonfic":
          $ccode = 'DVD Nonfiction';
          break;
		case "Multling":
          $ccode = 'Multilingual';
          break;
      }
	  
# ****************************************************************************************************************************
# *   need to massage data for movies
# ****************************************************************************************************************************
      if (trim($format) == 'DVD') {
  	    $tempTitle = str_replace(' ', '+', $title);
        $movieData = json_decode(file_get_contents('http://www.omdbapi.com/?apikey=55f5b2cf&t=' . $tempTitle), true);
  	  	
        $author   = $movieData['Director'];
  	    $summary  = $movieData['Plot'];
  	    $iconName = $movieData['Poster'];
      }
	}
	
	
# ****************************************************************************************************************************
# * if the barcode is empty, or the item is reference, skip it
# ****************************************************************************************************************************
    if (empty($barcode) OR strtoupper($format) == 'REF') {
      continue;
	}


# ****************************************************************************************************************************
# * Build out results array
# ****************************************************************************************************************************
    $searchResults['Items'][] = array('title' => trim($title), 'author' => $author, 'image' => $iconName, 'format' => $format . ' - ' . $ccode, 'barcode' => $barcode, 'key' => $barcode, 'summary' => $summary, 'url' => $url); 
  }
}

# ****************************************************************************************************************************
# * parsing the XML throws warning errors, turning back on
# ****************************************************************************************************************************
error_reporting(1);

# ****************************************************************************************************************************
# * Just in case there are no values to return, check and spit out empty rather than null
# ****************************************************************************************************************************
if (empty($searchResults['Items'])) {
  $searchResults['Items'] = '';
}  

# ****************************************************************************************************************************
# * Output to JSON
# ****************************************************************************************************************************
header('Content-Type: application/json');
echo json_encode($searchResults);
?>